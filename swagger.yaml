openapi: 3.0.0
info:
   title: Jobs API
   contact: {}
   version: '1.0'
servers:
   - url: localhost:3000
     variables: {}
paths:
   /auth/register:
      post:
         tags:
            - Auth
         summary: Jobs
         operationId: Jobs
         parameters: []
         requestBody:
            description: ''
            content:
               application/json:
                  schema:
                     allOf:
                        - $ref: '#/components/schemas/RegisterUserRequest'
                        - example:
                             name: agus
                             email: agus@gmail.com
                             password: '123456'
                  example:
                     name: agus
                     email: agus@gmail.com
                     password: '123456'
            required: true
         responses:
            '200':
               description: ''
               headers: {}
         deprecated: false
         security: []
   /auth/login:
      post:
         tags:
            - Auth
         summary: Login User
         operationId: LoginUser
         parameters: []
         requestBody:
            description: ''
            content:
               application/json:
                  schema:
                     allOf:
                        - $ref: '#/components/schemas/LoginUserRequest'
                        - example:
                             email: agus@gmail.com
                             password: '123456'
                  example:
                     email: agus@gmail.com
                     password: '123456'
            required: true
         responses:
            '200':
               description: ''
               headers: {}
         deprecated: false
         security: []
   /jobs:
      post:
         tags:
            - Jobs
         summary: Create Job
         operationId: CreateJob
         parameters: []
         requestBody:
            description: ''
            content:
               application/json:
                  schema:
                     allOf:
                        - $ref: '#/components/schemas/CreateJobRequest'
                        - example:
                             company: randomCompany
                             position: work
                  example:
                     company: randomCompany
                     position: work
            required: true
         responses:
            '200':
               description: ''
               headers: {}
         deprecated: false
         security:
            - bearer: []
      get:
         tags:
            - Jobs
         summary: Get All Jobs
         operationId: GetAllJobs
         parameters: []
         responses:
            '200':
               description: ''
               headers: {}
         deprecated: false
         security:
            - bearer: []
   /jobs/{id}:
      parameters:
         - in: path
           name: id
           schema:
              type: string
           required: true
           description: The job ID
      get:
         tags:
            - Jobs
         summary: Get Single Job
         operationId: GetSingleJob
         parameters: []
         responses:
            '200':
               description: ''
               headers: {}
         deprecated: false
         security:
            - bearer: []
      patch:
         tags:
            - Jobs
         summary: Update Job
         operationId: UpdateJob
         parameters: []
         requestBody:
            description: ''
            content:
               application/json:
                  schema:
                     allOf:
                        - $ref: '#/components/schemas/UpdateJobRequest'
                        - example:
                             company: randomCompanyTESTTEST
                             position: work
                  example:
                     company: randomCompanyTESTTEST
                     position: work
            required: true
         responses:
            '200':
               description: ''
               headers: {}
         deprecated: false
         security:
            - bearer: []
      delete:
         tags:
            - Jobs
         summary: Delete Job
         operationId: DeleteJob
         parameters: []
         responses:
            '200':
               description: ''
               headers: {}
         deprecated: false
         security:
            - bearer: []
components:
   schemas:
      RegisterUserRequest:
         title: RegisterUserRequest
         required:
            - name
            - email
            - password
         type: object
         properties:
            name:
               type: string
            email:
               type: string
            password:
               type: string
         example:
            name: agus
            email: agus@gmail.com
            password: '123456'
      LoginUserRequest:
         title: LoginUserRequest
         required:
            - email
            - password
         type: object
         properties:
            email:
               type: string
            password:
               type: string
         example:
            email: agus@gmail.com
            password: '123456'
      CreateJobRequest:
         title: CreateJobRequest
         required:
            - company
            - position
         type: object
         properties:
            company:
               type: string
            position:
               type: string
         example:
            company: randomCompany
            position: work
      UpdateJobRequest:
         title: UpdateJobRequest
         required:
            - company
            - position
         type: object
         properties:
            company:
               type: string
            position:
               type: string
         example:
            company: randomCompanyTESTTEST
            position: work
   securitySchemes:
      bearer:
         type: http
         scheme: bearer
security: []
tags:
   - name: Auth
     description: ''
   - name: Jobs
     description: ''
